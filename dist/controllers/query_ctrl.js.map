{"version":3,"sources":["../../src/controllers/query_ctrl.js"],"names":["QueryCtrl","_","PhasorDataSourceQueryCtrl","$scope","$injector","uiSegmentSrv","templateSrv","scope","ctrl","target","textEditor","phasorSegment","newPlusButton","phasorSegments","undefined","map","a","newSegment","value","text","expandable","referencePhasorSegment","unwrapPhasorAngle","setTargetWithPhasors","join","panelCtrl","refresh","context","option","event","datasource","metricFindQuery","then","altSegments","data","item","sort","b","unshift","filter","find","x","segment","push","plusButton","html","index","splice","type","referencePhasor","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBSA,qB,kBAAAA,S;;AAEFC,a;;;;;;;;;;;;;;;;;;;;;iDAEMC,yB;;;AACT,mDAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6CC,WAA7C,EAA0D;AAAA;;AAAA,sKAChDH,MADgD,EACxCC,SADwC;;AAItD,0BAAKG,KAAL,GAAaJ,MAAb;AACA,wBAAIK,YAAJ;AACA,0BAAKH,YAAL,GAAoBA,YAApB;;AAEA,0BAAKI,MAAL,CAAYA,MAAZ,GAAqB,EAArB;AACA,0BAAKA,MAAL,CAAYC,UAAZ,GAAyB,KAAzB;AACA,0BAAKD,MAAL,CAAYE,aAAZ,GAA4B,MAAKN,YAAL,CAAkBO,aAAlB,EAA5B;AACA,0BAAKH,MAAL,CAAYI,cAAZ,GAA8B,MAAKJ,MAAL,CAAYI,cAAZ,IAA8BC,SAA9B,GAA0C,EAA1C,GAA+C,MAAKL,MAAL,CAAYI,cAAZ,CAA2BE,GAA3B,CAA+B,UAAUC,CAAV,EAAa;AAAE,+BAAOR,KAAKH,YAAL,CAAkBY,UAAlB,CAA6B,EAAEC,OAAOF,EAAEG,IAAX,EAAiBC,YAAY,IAA7B,EAA7B,CAAP;AAA0E,qBAAxH,CAA7E;AACA,0BAAKX,MAAL,CAAYY,sBAAZ,GAAsC,MAAKZ,MAAL,CAAYY,sBAAZ,IAAsCP,SAAtC,GAAkD,MAAKT,YAAL,CAAkBO,aAAlB,EAAlD,GAAsFJ,KAAKH,YAAL,CAAkBY,UAAlB,CAA6B,EAAEC,OAAO,MAAKT,MAAL,CAAYY,sBAAZ,CAAmCH,KAA5C,EAAmDE,YAAY,IAA/D,EAA7B,CAA5H;;AAEA,0BAAKX,MAAL,CAAYa,iBAAZ,GAAiC,MAAKb,MAAL,CAAYa,iBAAZ,IAAiCR,SAAjC,GAA6C,KAA7C,GAAqD,MAAKL,MAAL,CAAYa,iBAAlG;;AAEA,0BAAKC,oBAAL;AAhBsD;AAiB3D;;AAED;;;;;2DACyB;AACnB,4BAAIf,OAAO,IAAX;;AAEAA,6BAAKC,MAAL,CAAYA,MAAZ,GAAqBD,KAAKC,MAAL,CAAYI,cAAZ,CAA2BE,GAA3B,CAA+B,UAAUC,CAAV,EAAa;AAAE,mCAAOA,EAAEE,KAAT;AAAe,yBAA7D,EAA+DM,IAA/D,CAAoE,GAApE,CAArB;AACAhB,6BAAKiB,SAAL,CAAeC,OAAf;AACH;;;uDAKgB;AACjB,6BAAKD,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;;uDAEiB;AAChB,6BAAKjB,MAAL,CAAYC,UAAZ,GAAyB,CAAC,KAAKD,MAAL,CAAYC,UAAtC;AACD;;;wDAEkB;AACf,6BAAKe,SAAL,CAAeC,OAAf,GADe,CACW;AAC7B;;;sDAGiB;AACd,4BAAIlB,OAAO,IAAX;;AAEAA,6BAAKC,MAAL,CAAYA,MAAZ,GAAqB,EAArB;AACAD,6BAAKC,MAAL,CAAYI,cAAZ,GAA6B,EAA7B;AACAL,6BAAKC,MAAL,CAAYE,aAAZ,GAA4BH,KAAKH,YAAL,CAAkBO,aAAlB,EAA5B;AACAJ,6BAAKC,MAAL,CAAYgB,SAAZ,CAAsBC,OAAtB;AACH;;;sDAKiBC,O,EAAS;AACvB,4BAAInB,OAAO,IAAX;AACA,4BAAIoB,SAAS,IAAb;;AAEA,4BAAIC,MAAMpB,MAAN,CAAaS,KAAb,IAAsB,EAA1B,EAA8BU,SAASC,MAAMpB,MAAN,CAAaS,KAAtB;AAC9B,+BAAO,KAAKY,UAAL,CAAgBC,eAAhB,CAAgCH,MAAhC,EAAwCI,IAAxC,CAA6C,gBAAQ;AACxD,gCAAIC,cAAchC,EAAEc,GAAF,CAAMmB,IAAN,EAAY,gBAAQ;AAClC,uCAAO1B,KAAKH,YAAL,CAAkBY,UAAlB,CAA6B,EAAEC,OAAOiB,KAAKhB,IAAd,EAAoBC,YAAYe,KAAKf,UAArC,EAA7B,CAAP;AACH,6BAFiB,CAAlB;AAGAa,wCAAYG,IAAZ,CAAiB,UAACpB,CAAD,EAAIqB,CAAJ,EAAU;AACvB,oCAAIrB,EAAEE,KAAF,GAAUmB,EAAEnB,KAAhB,EACI,OAAO,CAAC,CAAR;AACJ,oCAAIF,EAAEE,KAAF,GAAUmB,EAAEnB,KAAhB,EACI,OAAO,CAAP;AACJ,uCAAO,CAAP;AACH,6BAND;;AAQA,gCAAGS,WAAW,MAAd,EACEM,YAAYK,OAAZ,CAAoB9B,KAAKH,YAAL,CAAkBY,UAAlB,CAA6B,UAA7B,CAApB;;AAEF,mCAAOhB,EAAEsC,MAAF,CAASN,WAAT,EAAsB,mBAAW;AACpC,uCAAOhC,EAAEuC,IAAF,CAAOhC,KAAKC,MAAL,CAAYI,cAAnB,EAAmC,aAAK;AAC3C,2CAAO4B,EAAEvB,KAAF,IAAWwB,QAAQxB,KAA1B;AACH,iCAFM,KAEDJ,SAFN;AAGH,6BAJM,CAAP;AAKH,yBApBM,CAAP;AAqBH;;;uDAEkB;AACf,4BAAIN,OAAO,IAAX;;AAEA;AACA,4BAAIqB,MAAMpB,MAAN,CAAaU,IAAb,IAAqB,IAAzB,EAA+B;AAC3BX,iCAAKC,MAAL,CAAYI,cAAZ,CAA2B8B,IAA3B,CAAgCnC,KAAKH,YAAL,CAAkBY,UAAlB,CAA6B,EAAEC,OAAOW,MAAMpB,MAAN,CAAaU,IAAtB,EAA4BC,YAAY,IAAxC,EAA7B,CAAhC;AACAZ,iCAAKe,oBAAL;AACH;;AAED;AACA,4BAAIqB,aAAa,KAAKvC,YAAL,CAAkBO,aAAlB,EAAjB;AACAJ,6BAAKC,MAAL,CAAYE,aAAZ,CAA0BO,KAA1B,GAAkC0B,WAAW1B,KAA7C;AACAV,6BAAKC,MAAL,CAAYE,aAAZ,CAA0BkC,IAA1B,GAAiCD,WAAWC,IAA5C;AACArC,6BAAKiB,SAAL,CAAeC,OAAf;AACH;;;uDAEkBgB,O,EAASI,K,EAAO;AAC/B,4BAAItC,OAAO,IAAX;;AAEA,4BAAIkC,QAAQxB,KAAR,IAAiB,UAArB,EAAiC;AAC7BV,iCAAKC,MAAL,CAAYI,cAAZ,CAA2BkC,MAA3B,CAAkCD,KAAlC,EAAyC,CAAzC;AACH,yBAFD,MAGK;AACDtC,iCAAKC,MAAL,CAAYI,cAAZ,CAA2BiC,KAA3B,IAAoCJ,OAApC;AACH;;AAEDlC,6BAAKe,oBAAL;AACH;;;iEAI4B;AACzB,4BAAIf,OAAO,IAAX;AACA,4BAAIoB,SAAS,IAAb;;AAEA,4BAAIC,MAAMpB,MAAN,CAAaS,KAAb,IAAsB,EAA1B,EAA8BU,SAASC,MAAMpB,MAAN,CAAaS,KAAtB;AAC9B,+BAAO,KAAKY,UAAL,CAAgBC,eAAhB,CAAgCH,MAAhC,EAAwCI,IAAxC,CAA6C,gBAAQ;AACxD,gCAAIC,cAAchC,EAAEc,GAAF,CAAMmB,IAAN,EAAY,gBAAQ;AAClC,uCAAO1B,KAAKH,YAAL,CAAkBY,UAAlB,CAA6B,EAAEC,OAAOiB,KAAKhB,IAAd,EAAoBC,YAAYe,KAAKf,UAArC,EAA7B,CAAP;AACH,6BAFiB,CAAlB;AAGAa,wCAAYG,IAAZ,CAAiB,UAACpB,CAAD,EAAIqB,CAAJ,EAAU;AACvB,oCAAIrB,EAAEE,KAAF,GAAUmB,EAAEnB,KAAhB,EACI,OAAO,CAAC,CAAR;AACJ,oCAAIF,EAAEE,KAAF,GAAUmB,EAAEnB,KAAhB,EACI,OAAO,CAAP;AACJ,uCAAO,CAAP;AACH,6BAND;;AAQA,gCAAIV,KAAKC,MAAL,CAAYY,sBAAZ,CAAmC2B,IAAnC,IAA2C,aAA/C,EACIf,YAAYK,OAAZ,CAAoB9B,KAAKH,YAAL,CAAkBY,UAAlB,CAA6B,UAA7B,CAApB;;AAEJ,mCAAOhB,EAAEsC,MAAF,CAASN,WAAT,EAAsB,mBAAW;AACpC,uCAAOhC,EAAEuC,IAAF,CAAOhC,KAAKC,MAAL,CAAYI,cAAnB,EAAmC,aAAK;AAC3C,2CAAO4B,EAAEvB,KAAF,IAAWwB,QAAQxB,KAA1B;AACH,iCAFM,KAEDJ,SAFN;AAGH,6BAJM,CAAP;AAKH,yBApBM,CAAP;AAqBH;;;gEAC2B;AACxB,4BAAIN,OAAO,IAAX;;AAEA;AACA,4BAAIqB,MAAMpB,MAAN,CAAaU,IAAb,IAAqB,UAAzB,EAAqC;AACjCX,iCAAKC,MAAL,CAAYY,sBAAZ,GAAqCb,KAAKH,YAAL,CAAkBY,UAAlB,CAA6B,EAAEC,OAAOW,MAAMpB,MAAN,CAAaU,IAAtB,EAA4BC,YAAY,IAAxC,EAA7B,CAArC;AACAZ,iCAAKC,MAAL,CAAYwC,eAAZ,GAA8BpB,MAAMpB,MAAN,CAAaU,IAA3C;AACAX,iCAAKe,oBAAL;AACH,yBAJD,MAKK;AACDf,iCAAKC,MAAL,CAAYY,sBAAZ,GAAqC,KAAKhB,YAAL,CAAkBO,aAAlB,EAArC;AACA,mCAAOJ,KAAKC,MAAL,CAAYwC,eAAnB;AACAzC,iCAAKe,oBAAL;AACH;AACDf,6BAAKiB,SAAL,CAAeC,OAAf;AACH;;;;cA7J4C1B,S;;;;AAmK/CE,sCAA0BgD,WAA1B,GAAwC,2BAAxC","file":"query_ctrl.js","sourcesContent":["//******************************************************************************************************\r\n//  query_ctrl.js - Gbtc\r\n//\r\n//  Copyright ï¿½ 2017, Grid Protection Alliance.  All Rights Reserved.\r\n//\r\n//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See\r\n//  the NOTICE file distributed with this work for additional information regarding copyright ownership.\r\n//  The GPA licenses this file to you under the MIT License (MIT), the \"License\"; you may not use this\r\n//  file except in compliance with the License. You may obtain a copy of the License at:\r\n//\r\n//      http://opensource.org/licenses/MIT\r\n//\r\n//  Unless agreed to in writing, the subject software distributed under the License is distributed on an\r\n//  \"AS-IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the\r\n//  License for the specific language governing permissions and limitations.\r\n//\r\n//  Code Modification History:\r\n//  ----------------------------------------------------------------------------------------------------\r\n//  10/30/2017 - Billy Ernest\r\n//       Generated original version of source code.\r\n//\r\n//******************************************************************************************************\r\n\r\nimport { QueryCtrl } from 'app/plugins/sdk'\r\nimport './../css/query-editor.css!'\r\nimport _ from 'lodash'\r\n\r\nexport class PhasorDataSourceQueryCtrl extends QueryCtrl{\r\n    constructor($scope, $injector, uiSegmentSrv, templateSrv) {\r\n        super($scope, $injector);\r\n\r\n\r\n        this.scope = $scope;\r\n        var ctrl = this;\r\n        this.uiSegmentSrv = uiSegmentSrv;\r\n\r\n        this.target.target = '';\r\n        this.target.textEditor = false;\r\n        this.target.phasorSegment = this.uiSegmentSrv.newPlusButton();\r\n        this.target.phasorSegments = (this.target.phasorSegments == undefined ? [] : this.target.phasorSegments.map(function (a) { return ctrl.uiSegmentSrv.newSegment({ value: a.text, expandable: true }) }));\r\n        this.target.referencePhasorSegment = (this.target.referencePhasorSegment == undefined ? this.uiSegmentSrv.newPlusButton() : ctrl.uiSegmentSrv.newSegment({ value: this.target.referencePhasorSegment.value, expandable: true }));\r\n\r\n        this.target.unwrapPhasorAngle = (this.target.unwrapPhasorAngle == undefined ? false : this.target.unwrapPhasorAngle);\r\n\r\n        this.setTargetWithPhasors()\r\n  }\r\n\r\n  // #region Target Compilation\r\n    setTargetWithPhasors() {\r\n        var ctrl = this;\r\n\r\n        ctrl.target.target = ctrl.target.phasorSegments.map(function (a) { return a.value}).join(';');\r\n        ctrl.panelCtrl.refresh()\r\n    }\r\n\r\n  // #endregion\r\n\r\n  // #region Change Handlers\r\n  onChangeInternal() {\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  toggleEditorMode(){\r\n    this.target.textEditor = !this.target.textEditor;\r\n  }\r\n\r\n  textEditorChanged(){\r\n      this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  // used to change the query type from element list to filter expression\r\n  changeQueryType() {\r\n      var ctrl = this;\r\n\r\n      ctrl.target.target = '';\r\n      ctrl.target.phasorSegments = [];\r\n      ctrl.target.phasorSegment = ctrl.uiSegmentSrv.newPlusButton();\r\n      ctrl.target.panelCtrl.refresh();\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Phasors\r\n  getPhasorSegments(context) {\r\n      var ctrl = this;\r\n      var option = null;\r\n\r\n      if (event.target.value != \"\") option = event.target.value;\r\n      return this.datasource.metricFindQuery(option).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable});\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n\r\n          if(context == 'edit')\r\n            altSegments.unshift(ctrl.uiSegmentSrv.newSegment('-REMOVE-'));\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.target.phasorSegments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n\r\n  addPhasorSegment() {\r\n      var ctrl = this;\r\n\r\n      // if value is not empty, add new attribute segment\r\n      if (event.target.text != null) {\r\n          ctrl.target.phasorSegments.push(ctrl.uiSegmentSrv.newSegment({ value: event.target.text, expandable: true }))\r\n          ctrl.setTargetWithPhasors()\r\n      }\r\n\r\n      // reset the + button\r\n      var plusButton = this.uiSegmentSrv.newPlusButton()\r\n      ctrl.target.phasorSegment.value = plusButton.value\r\n      ctrl.target.phasorSegment.html = plusButton.html\r\n      ctrl.panelCtrl.refresh()\r\n  }\r\n\r\n  phasorValueChanged(segment, index) {\r\n      var ctrl = this;\r\n\r\n      if (segment.value == \"-REMOVE-\") {\r\n          ctrl.target.phasorSegments.splice(index, 1);\r\n      }\r\n      else {\r\n          ctrl.target.phasorSegments[index] = segment;\r\n      }\r\n\r\n      ctrl.setTargetWithPhasors();\r\n  }\r\n  // #endregion\r\n\r\n  // #region Reference Site\r\n  getReferencePhasorSegments() {\r\n      var ctrl = this;\r\n      var option = null;\r\n\r\n      if (event.target.value != \"\") option = event.target.value;\r\n      return this.datasource.metricFindQuery(option).then(data => {\r\n          var altSegments = _.map(data, item => {\r\n              return ctrl.uiSegmentSrv.newSegment({ value: item.text, expandable: item.expandable });\r\n          });\r\n          altSegments.sort((a, b) => {\r\n              if (a.value < b.value)\r\n                  return -1;\r\n              if (a.value > b.value)\r\n                  return 1;\r\n              return 0;\r\n          });\r\n\r\n          if (ctrl.target.referencePhasorSegment.type != 'plus-button')\r\n              altSegments.unshift(ctrl.uiSegmentSrv.newSegment('-REMOVE-'));\r\n\r\n          return _.filter(altSegments, segment => {\r\n              return _.find(ctrl.target.phasorSegments, x => {\r\n                  return x.value == segment.value\r\n              }) == undefined;\r\n          });\r\n      });\r\n  }\r\n  addReferencePhasorSegment() {\r\n      var ctrl = this;\r\n\r\n      // if value is not empty, add new attribute segment\r\n      if (event.target.text != '-REMOVE-') {\r\n          ctrl.target.referencePhasorSegment = ctrl.uiSegmentSrv.newSegment({ value: event.target.text, expandable: true });\r\n          ctrl.target.referencePhasor = event.target.text;\r\n          ctrl.setTargetWithPhasors();\r\n      }\r\n      else {\r\n          ctrl.target.referencePhasorSegment = this.uiSegmentSrv.newPlusButton()\r\n          delete ctrl.target.referencePhasor;\r\n          ctrl.setTargetWithPhasors();\r\n      }\r\n      ctrl.panelCtrl.refresh()\r\n  }\r\n\r\n\r\n  // #endregion\r\n}\r\n\r\nPhasorDataSourceQueryCtrl.templateUrl = 'partial/query.editor.html';"]}